name: Flutter CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  drive:
    runs-on: macOS-latest
    steps:
      - name: "List all simulators"
        run: "xcrun xctrace list devices"
      - name: "Start Simulator"
        id: start-simulator
        run: |
          UDID=$(xcrun xctrace list devices | grep -Eo "iPhone 13 Pro Max Simulator \(16.2\) \(\w{8}-\w{4}-\w{4}-\w{4}-\w{12}\)" | awk '{print substr($NF, 2, length($NF)-2)}')
      
          if [ -z "$UDID" ]; then
            echo "No Simulator with this name found: iPhone 13 Pro Max Simulator (16.2)"
            exit 1
          fi
          echo "UDID: $UDID"
          echo "UDID: $UDID"
          echo "::set-output name=UDID::$UDID"
          # Check the existence of the simulator
          if ! xcrun simctl list | grep -q "$UDID"; then
            echo "Simulator with UDID $UDID not found."
            exit 1
          fi
          # Boot the simulator
          xcrun simctl boot "$UDID"
      
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Dart
        uses: dart-lang/setup-dart@v1.5.1

      - name: Cache Flutter and pub dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.pub-cache
            ~/.pub
            ~/.fvm
            build
          key: ${{ runner.os }}-flutter-pub-${{ hashFiles('**/*.yaml') }}

      - name: Install and use FVM
        run: |
          dart pub global activate fvm
          fvm install 3.13.3
          fvm use 3.13.3

      - name: Run Flutter tests
        run: fvm flutter test

      - name: Run Flutter tests
        run: fvm flutter test integration_test -d ${{ steps.start-simulator.outputs.UDID }}